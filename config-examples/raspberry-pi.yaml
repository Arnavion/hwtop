# This example config is for a Raspberry Pi 3.

# CPU has 4 threads. Show them in four columns of one thread each.
cpus:
  cols: 4
  # CPU frequency is normally read from `/proc/cpuinfo`. However the Raspberry Pi's kernel does not populate the CPU frequency in that file.
  # Setting `use_sysfs` to `true` makes `hwtop` read the CPU frequency from `/sys/devices/system/cpu/cpu*/cpufreq/scaling_cur_freq` instead.
  #
  # While the `scaling_cur_freq` file is always present, it is better to let `hwtop` read from `/proc/cpuinfo` if the frequency information is available there.
  # This is because each read of an individual `scaling_cur_freq` file can block for 10ms, which can add up to a noticeable delay for machines with many CPUs.
  # Reading from `/proc/cpuinfo` also has this delay, but it only applies once to the whole file regardless of how many CPUs there are.
  #
  # Ref: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=4815d3c56d1e10449a44089a47544d9ba84fad0d
  # Ref: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=7d5905dc14a87805a59f3c5bf70173aac2bb18f8
  # Ref: https://github.com/hishamhm/htop/pull/932#issuecomment-520197726
  use_sysfs: true


# List of sensor groups. Each group has a name, zero or more temp sensors, and zero or more fan sensors, and is rendered on one line.
#
# Sensor groups allow you to group sensors from multiple hwmon devices into one logical group.
sensors:
- name: 'CPU'
  temps:
    # The Raspberry Pi does not have an hwmon device for its temp sensor. Instead, the temp sensor must be read from the thermal driver.
    # This is indicate by setting the temp sensor to a `thermal_zone:` instead of an `hwmon: ... num: ...`
    #
    # A value of `0` means the value is read from `/sys/class/thermal/thermal_zone0/temp`
  - thermal_zone: 0


# Monitor usage of the network device named `eth0`
networks:
- 'eth0'
