# This example config is for a Raspberry Pi 3.


# Monitor usage of the network interface named `eth0`
networks = [
	"eth0",
]


[cpus]
# CPU frequency is normally read from `/proc/cpuinfo`. However the Raspberry Pi's kernel does not populate the CPU frequency in that file.
# Setting `use_sysfs` to `true` makes `hwtop` read the CPU frequency from `/sys/devices/system/cpu/cpu*/cpufreq/scaling_cur_freq` instead.
#
# While the `scaling_cur_freq` file is always present, it is better to let `hwtop` read from `/proc/cpuinfo` if the frequency information is available there.
# This is because each read of an individual `scaling_cur_freq` file can block for 10ms, which can add up to a noticeable delay for machines with many CPUs.
# Reading from `/proc/cpuinfo` also has this delay, but it only applies once to the whole file regardless of how many CPUs there are.
#
# Thus `use_sysfs` should be set to `true` only if the default of `false` does not work.
#
# Ref: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=4815d3c56d1e10449a44089a47544d9ba84fad0d
# Ref: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=7d5905dc14a87805a59f3c5bf70173aac2bb18f8
# Ref: https://github.com/hishamhm/htop/pull/932#issuecomment-520197726
use_sysfs = true


# Sensors are read using the hwmon sysfs interface. Every hwmon device has a corresponding device name.
# So define some hwmon devices corresponding to the device names.
#
# Each entry here corresponds to a path under `/sys/class/hwmon`. The `dev_name` is the value of `/sys/class/hwmon/hwmon*/name`
[hwmon]
# Define an hwmon named "cpu" corresponding to the real hwmon device with name "cpu_thermal"
cpu = { dev_name = "cpu_thermal" }


# List of sensor groups. Each group has a name, zero or more temp sensors, zero or more fan sensors, and zero or more battery sensors.
#
# Sensor groups allow you to group sensors from multiple hwmon devices into one logical group.
[[sensor]]
name = "CPU"
temps = [
	# This is a temp sensor under the hwmon named "cpu" and is temp sensor number 1 in that device.
	# For example, if that device had the path `/sys/class/hwmon/hwmon0`, then this sensor's value is read from
	# `/sys/class/hwmon/hwmon0/temp1_input`
	{ hwmon = "cpu", num = 1 },

	# The Raspberry Pi also reports thermal zones. A thermal zone's temperature can be read by setting the temp sensor to a `thermal_zone = ...`
	# instead of an `hwmon = ... , num = ...`
	#
	# A value of `0` means the value is read from `/sys/class/thermal/thermal_zone0/temp`, and its name is read from `/sys/class/thermal/thermal_zone0/type`
	{ thermal_zone = 0 },
]
